
import java.rmi.Naming;

public class HotelClient {

    public static void main(String[] args) {
        try {
            // Check if there are sufficient arguments
            if (args.length < 2) {
                System.out.println("Usage: java HotelClient <host> <port> <command> [parameters]");
                return;
            }

            // Connect to the RoomManager via RMI
            RoomManager roomManager = (RoomManager) Naming.lookup("rmi://" + args[0] + ":" + args[1] + "/RoomManager");

            // Validate the number of arguments based on the command
            if (args.length >= 3) {
                String command = args[2];

                switch (command) {
                    case "-login":
                        if (args.length == 5) {  // Check for username and password
                            String username = args[3];
                            String password = args[4];
                            if (roomManager.login(username, password)) {
                                System.out.println("Login successful!");
                            } else {
                                System.out.println("Invalid username or password.");
                            }
                        } else {
                            System.out.println("Usage: java HotelClient <host> <port> -login <username> <password>");
                        }
                        break;

                    case "-list":
                        System.out.println(roomManager.listRooms());
                        break;

                    case "-book":
                        if (args.length >= 5) {  // Check for room type, guest name, and optional SSN
                            int roomType = Integer.parseInt(args[3]);
                            String guestName = args[4];
                            String guestSSN = args.length > 5 ? args[5] : "AutoGenerated";
                            System.out.println(roomManager.bookRoom(roomType, guestName, guestSSN));
                        } else {
                            System.out.println("Usage: java HotelClient <host> <port> -book <roomType> <guestName> [guestSSN]");
                        }
                        break;

                    case "-guests":
                        for (String guest : roomManager.listGuests()) {
                            System.out.println(guest);
                        }
                        break;

                    case "-logOut":
                        roomManager.logout();
                        System.out.println("Logged out.");
                        break;

                    default:
                        System.out.println("Invalid command.");
                        break;
                }
            } else {
                System.out.println("Please enter a command to use the system.");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
